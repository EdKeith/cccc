<?xml version="1.0" encoding="utf-8"?>
<!--Detailed report on module ParseUtility-->
<CCCC_Project>
<module_summary>
<lines_of_code value="188" level="0" />
<lines_of_code_per_member_function value="******" level="0" />
<McCabes_cyclomatic_complexity value="19" level="0" />
<McCabes_cyclomatic_complexity_per_member_function value="******" level="2" />
<lines_of_code value="59" level="0" />
<lines_of_code_per_member_function value="********" level="2" />
<lines_of_code_per_line_of_comment value="3.186" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="0.322" level="0" />
<weighted_methods_per_class_unity value="11" level="0" />
<weighted_methods_per_class_visibility value="9" level="0" />
<depth_of_inheritance_tree value="0" level="0" />
<number_of_children value="0" level="0" />
<coupling_between_objects value="10" level="0" />
<IF4 value="256" level="1" />
<IF4_per_member_function value="********" level="2" />
<IF4_visible value="0" level="0" />
<IF4_visible_per_member_function value="********" level="0" />
<IF4_concrete value="0" level="0" />
<IF4_concrete_per_member_function value="********" level="0" />
</module_summary>
<module_detail>
<description>declaration</description>
<source_reference file="./cccc/cccc_utl.h" line="126" />
<lines_of_code value="1" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
<description>definition</description>
<source_reference file="./cccc/cccc_utl.h" line="139" />
<lines_of_code value="11" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="10" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</module_detail>
<procedural_detail>
<member_function>
<name>ParseUtility(ANTLRParser *)</name>
<extent>
<description>definition</description>
<source_reference file="./cccc/cccc_utl.cc" line="183" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="./cccc/cccc_utl.h" line="142" />
</extent>
<lines_of_code value="9" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="5" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>ParseUtility(const ParseUtility &amp;)</name>
<extent>
<description>declaration</description>
<source_reference file="./cccc/cccc_utl.h" line="183" />
</extent>
<lines_of_code value="1" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="2" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>currentInstance()</name>
<extent>
<description>definition</description>
<source_reference file="./cccc/cccc_utl.h" line="169" />
</extent>
<lines_of_code value="1" level="0" />
<McCabes_cyclomatic_complexity value="1" level="0" />
<lines_of_comment value="2" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>lookahead_text(int)</name>
<extent>
<description>definition</description>
<source_reference file="./cccc/cccc_utl.cc" line="99" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="./cccc/cccc_utl.h" line="153" />
</extent>
<lines_of_code value="16" level="0" />
<McCabes_cyclomatic_complexity value="3" level="0" />
<lines_of_comment value="1" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>operator =(const ParseUtility &amp;)</name>
<extent>
<description>declaration</description>
<source_reference file="./cccc/cccc_utl.h" line="184" />
</extent>
<lines_of_code value="1" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>resynchronize(int,SetWordType *,ANTLRTokenPtr &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="./cccc/cccc_utl.cc" line="115" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="./cccc/cccc_utl.h" line="158" />
</extent>
<lines_of_code value="51" level="1" />
<McCabes_cyclomatic_complexity value="5" level="0" />
<lines_of_comment value="16" level="0" />
<lines_of_code_per_line_of_comment value="3.187" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="0.312" level="0" />
</member_function>
<member_function>
<name>scopeCombine(const string &amp;,const string &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="./cccc/cccc_utl.cc" line="207" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="./cccc/cccc_utl.h" line="165" />
</extent>
<lines_of_code value="19" level="0" />
<McCabes_cyclomatic_complexity value="4" level="0" />
<lines_of_comment value="13" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>syn(_ANTLRTokenPtr,ANTLRChar *,SetWordType *,ANTLRTokenType,int)</name>
<extent>
<description>definition</description>
<source_reference file="./cccc/cccc_utl.cc" line="549" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="./cccc/cccc_utl.h" line="149" />
</extent>
<lines_of_code value="31" level="1" />
<McCabes_cyclomatic_complexity value="2" level="0" />
<lines_of_comment value="4" level="0" />
<lines_of_code_per_line_of_comment value="7.750" level="1" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>tracein(const char *,int,ANTLRAbstractToken *)</name>
<extent>
<description>definition</description>
<source_reference file="./cccc/cccc_utl.cc" line="501" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="./cccc/cccc_utl.h" line="147" />
</extent>
<lines_of_code value="15" level="0" />
<McCabes_cyclomatic_complexity value="1" level="0" />
<lines_of_comment value="4" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>traceout(const char *,int,ANTLRAbstractToken *)</name>
<extent>
<description>definition</description>
<source_reference file="./cccc/cccc_utl.cc" line="520" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="./cccc/cccc_utl.h" line="148" />
</extent>
<lines_of_code value="27" level="0" />
<McCabes_cyclomatic_complexity value="3" level="0" />
<lines_of_comment value="2" level="0" />
<lines_of_code_per_line_of_comment value="13.500" level="1" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>~ParseUtility()</name>
<extent>
<description>definition</description>
<source_reference file="./cccc/cccc_utl.cc" line="199" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="./cccc/cccc_utl.h" line="143" />
</extent>
<lines_of_code value="5" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
</procedural_detail>
<structural_detail>
<module>
<name>ParseUtility</name>
<client_module>
<name>CParser</name>
<visible>false</visible>
<concrete>false</concrete>
<extent>
<description>has by reference</description>
<source_reference file="./cccc/CParser.h" line="52" />
</extent>
<name>JParser</name>
<visible>false</visible>
<concrete>false</concrete>
<extent>
<description>has by reference</description>
<source_reference file="./cccc/JParser.h" line="46" />
</extent>
</client_module>
<supplier_module>
<name>ANTLRAbstractToken</name>
<visible>true</visible>
<concrete>false</concrete>
<extent>
<description>pass by reference</description>
<source_reference file="./cccc/cccc_utl.cc" line="503" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="./cccc/cccc_utl.cc" line="522" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="./cccc/cccc_utl.h" line="147" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="./cccc/cccc_utl.h" line="148" />
</extent>
<name>ANTLRChar</name>
<visible>true</visible>
<concrete>false</concrete>
<extent>
<description>pass by reference</description>
<source_reference file="./cccc/cccc_utl.cc" line="550" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="./cccc/cccc_utl.h" line="149" />
</extent>
<name>ANTLRParser</name>
<visible>true</visible>
<concrete>false</concrete>
<extent>
<description>pass by reference</description>
<source_reference file="./cccc/cccc_utl.cc" line="183" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="./cccc/cccc_utl.h" line="142" />
</extent>
<name>ANTLRTokenPtr</name>
<visible>true</visible>
<concrete>false</concrete>
<extent>
<description>pass by reference</description>
<source_reference file="./cccc/cccc_utl.cc" line="117" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="./cccc/cccc_utl.h" line="160" />
</extent>
<name>ANTLR_Assisted_Parser</name>
<visible>false</visible>
<concrete>false</concrete>
<extent>
<description>has by reference</description>
<source_reference file="./cccc/cccc_utl.h" line="174" />
</extent>
<name>SetWordType</name>
<visible>true</visible>
<concrete>false</concrete>
<extent>
<description>pass by reference</description>
<source_reference file="./cccc/cccc_utl.cc" line="116" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="./cccc/cccc_utl.cc" line="550" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="./cccc/cccc_utl.h" line="149" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="./cccc/cccc_utl.h" line="159" />
</extent>
<name>_ANTLRTokenPtr</name>
<visible>true</visible>
<concrete>true</concrete>
<extent>
<description>pass by value</description>
<source_reference file="./cccc/cccc_utl.cc" line="550" />
</extent>
<extent>
<description>pass by value</description>
<source_reference file="./cccc/cccc_utl.h" line="149" />
</extent>
<name>string</name>
<visible>true</visible>
<concrete>true</concrete>
<extent>
<description>pass by reference</description>
<source_reference file="./cccc/cccc_utl.cc" line="207" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="./cccc/cccc_utl.cc" line="207" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="./cccc/cccc_utl.h" line="165" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="./cccc/cccc_utl.h" line="165" />
</extent>
<extent>
<description>has by value</description>
<source_reference file="./cccc/cccc_utl.h" line="177" />
</extent>
<extent>
<description>has by value</description>
<source_reference file="./cccc/cccc_utl.h" line="179" />
</extent>
</supplier_module>
</module>
</structural_detail>
</CCCC_Project>
